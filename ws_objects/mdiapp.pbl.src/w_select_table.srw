$PBExportHeader$w_select_table.srw
forward
global type w_select_table from window
end type
type st_5 from statictext within w_select_table
end type
type mle_2 from multilineedit within w_select_table
end type
type ddlb_3 from dropdownlistbox within w_select_table
end type
type cbx_1 from checkbox within w_select_table
end type
type ddlb_2 from dropdownlistbox within w_select_table
end type
type st_4 from statictext within w_select_table
end type
type ddlb_1 from dropdownlistbox within w_select_table
end type
type st_3 from statictext within w_select_table
end type
type cb_1 from commandbutton within w_select_table
end type
type cb_2 from commandbutton within w_select_table
end type
type cb_3 from commandbutton within w_select_table
end type
type st_1 from statictext within w_select_table
end type
type st_2 from statictext within w_select_table
end type
type dw_tables from datawindow within w_select_table
end type
type dw_columns from datawindow within w_select_table
end type
end forward

global type w_select_table from window
integer width = 2350
integer height = 2052
boolean titlebar = true
string title = "Select Table"
boolean controlmenu = true
windowtype windowtype = response!
long backcolor = 67108864
string icon = "AppIcon!"
boolean clientedge = true
boolean center = true
st_5 st_5
mle_2 mle_2
ddlb_3 ddlb_3
cbx_1 cbx_1
ddlb_2 ddlb_2
st_4 st_4
ddlb_1 ddlb_1
st_3 st_3
cb_1 cb_1
cb_2 cb_2
cb_3 cb_3
st_1 st_1
st_2 st_2
dw_tables dw_tables
dw_columns dw_columns
end type
global w_select_table w_select_table

type variables
String is_Table, ls_SQL
String ls_Category, ls_Value
end variables

forward prototypes
public function string wf_build_sql_syntax ()
public function string wf_build_sql_category_value ()
end prototypes

public function string wf_build_sql_syntax ();/*mle_1.text generates SQL statement syntax format*/

Long  ll_rows, ll_index
String ls_columns, ls_column, ls_sql_syntax

ll_rows = dw_columns.RowCount()

//SQL Syntax
FOR ll_index = 1 TO ll_rows
	IF dw_columns.IsSelected(ll_index) THEN
		IF ls_columns <>"" THEN ls_columns = ls_columns + ","
		ls_column = dw_columns.GetItemString(ll_index,1)
		ls_columns = ls_columns + ls_column
	END IF
NEXT

//Generate 
IF ls_columns <> "" THEN
	ls_sql_syntax = "Select " + ls_columns +" from " + is_Table
	RETURN ls_sql_syntax
ELSE
	RETURN ""
END IF




end function

public function string wf_build_sql_category_value ();/* The syntax format generated by mle_2.text is generated when category and value are selected*/
String ls_sql_syntax_category


//contsruct the sql string 
If  ls_Category <> "" AND ls_Value <>"" Then		
	// Construct the Select statement
	If Pos(ls_Value,"Sum") >0 OR Pos(ls_Value, "Count") >0 THEN
		ls_sql_syntax_category = "Select " +ls_Category +","+ls_Value+" from " + is_table + " Group by " + ls_Category
	ELSE
		ls_sql_syntax_category = "Select " +ls_Category +","+ls_Value+" from " + is_table	
	END IF
	return  ls_sql_syntax_category
Else
	return ""
End If



end function

on w_select_table.create
this.st_5=create st_5
this.mle_2=create mle_2
this.ddlb_3=create ddlb_3
this.cbx_1=create cbx_1
this.ddlb_2=create ddlb_2
this.st_4=create st_4
this.ddlb_1=create ddlb_1
this.st_3=create st_3
this.cb_1=create cb_1
this.cb_2=create cb_2
this.cb_3=create cb_3
this.st_1=create st_1
this.st_2=create st_2
this.dw_tables=create dw_tables
this.dw_columns=create dw_columns
this.Control[]={this.st_5,&
this.mle_2,&
this.ddlb_3,&
this.cbx_1,&
this.ddlb_2,&
this.st_4,&
this.ddlb_1,&
this.st_3,&
this.cb_1,&
this.cb_2,&
this.cb_3,&
this.st_1,&
this.st_2,&
this.dw_tables,&
this.dw_columns}
end on

on w_select_table.destroy
destroy(this.st_5)
destroy(this.mle_2)
destroy(this.ddlb_3)
destroy(this.cbx_1)
destroy(this.ddlb_2)
destroy(this.st_4)
destroy(this.ddlb_1)
destroy(this.st_3)
destroy(this.cb_1)
destroy(this.cb_2)
destroy(this.cb_3)
destroy(this.st_1)
destroy(this.st_2)
destroy(this.dw_tables)
destroy(this.dw_columns)
end on

event open;Long		ll_ret, ll_tab_RowCount, ll_col_RowCount
Integer	li_row, li_Return
String		ls_col2, ls_col3

//Open w_table2_select, w_table update data

SQLCA.AutoCommit = TRUE

dw_tables.SetTransObject(sqlca)
dw_columns.SetTransObject(sqlca)


IF f_set_table_select(dw_tables) <0 THEN
	Messagebox("Error", &
					"Unable to set SQL select statement for tables list", &
					StopSign!)
	this.Triggerevent( Close! )
END IF

ll_ret  = dw_tables.Retrieve( )
IF ll_ret < 1 THEN
	Messagebox("Retrieve renturn code is:", ll_ret)
END IF


/*default select*/


ll_tab_RowCount = dw_tables.RowCount() - 1


dw_tables.ScrollToRow(ll_tab_RowCount)
dw_tables.event clicked(0, 0, ll_tab_RowCount, dw_tables.object.tname)

dw_columns.event clicked(0, 0, 3, dw_columns.object.cname)

ll_col_RowCount = dw_columns.RowCount() - 1
dw_columns.event clicked(0, 0, ll_col_RowCount, dw_columns.object.cname)




end event

type st_5 from statictext within w_select_table
integer x = 137
integer y = 1208
integer width = 549
integer height = 56
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
long textcolor = 33554432
long backcolor = 67108864
string text = "Generate SQL Syntax :"
boolean focusrectangle = false
end type

type mle_2 from multilineedit within w_select_table
integer x = 123
integer y = 1284
integer width = 2057
integer height = 312
integer taborder = 30
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 33554432
boolean hscrollbar = true
boolean vscrollbar = true
borderstyle borderstyle = stylelowered!
end type

type ddlb_3 from dropdownlistbox within w_select_table
boolean visible = false
integer x = 1998
integer y = 1056
integer width = 1047
integer height = 372
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
long textcolor = 33554432
boolean enabled = false
borderstyle borderstyle = stylelowered!
end type

type cbx_1 from checkbox within w_select_table
boolean visible = false
integer x = 2437
integer y = 964
integer width = 215
integer height = 64
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
long textcolor = 33554432
long backcolor = 67108864
string text = "Series:"
end type

event clicked;IF cbx_1.checked THEN
	ddlb_3.Enabled = TRUE
ELSE
	ddlb_3.Enabled = False
END IF
end event

type ddlb_2 from dropdownlistbox within w_select_table
integer x = 123
integer y = 1056
integer width = 1399
integer height = 364
integer taborder = 30
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
long textcolor = 33554432
borderstyle borderstyle = stylelowered!
end type

event selectionchanged;//Get the selected content and generate SQL in mle_2.text
ls_Value = ddlb_2.Text(index)

mle_2.text = wf_build_sql_category_value()
end event

type st_4 from statictext within w_select_table
integer x = 114
integer y = 988
integer width = 206
integer height = 52
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
long textcolor = 33554432
long backcolor = 67108864
string text = "Values:"
alignment alignment = center!
boolean focusrectangle = false
end type

type ddlb_1 from dropdownlistbox within w_select_table
integer x = 123
integer y = 832
integer width = 1403
integer height = 424
integer taborder = 20
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
long textcolor = 33554432
boolean sorted = false
borderstyle borderstyle = stylelowered!
end type

event selectionchanged;//Get the selected content and generate SQL in mle_2.text
ls_Category = ddlb_1.Text(index)

mle_2.text = wf_build_sql_category_value()
end event

type st_3 from statictext within w_select_table
integer x = 105
integer y = 752
integer width = 279
integer height = 64
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
long textcolor = 33554432
long backcolor = 67108864
string text = "Category:"
alignment alignment = center!
boolean focusrectangle = false
end type

type cb_1 from commandbutton within w_select_table
integer x = 1417
integer y = 1748
integer width = 343
integer height = 92
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
string text = "OK"
boolean default = true
end type

event clicked;ls_SQL=Trim(mle_2.text)
IF IsNull(ls_SQL) Or ls_SQL = "" THEN
	Messagebox("Tips","SQL syntax is empty!")
	Return
END IF


//Return the SQL statement to w_table
CloseWithReturn(w_select_table, ls_SQL)


end event

type cb_2 from commandbutton within w_select_table
integer x = 1847
integer y = 1748
integer width = 343
integer height = 92
integer taborder = 40
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
string text = "Cancel"
end type

event clicked;Close( Parent )
end event

type cb_3 from commandbutton within w_select_table
integer x = 128
integer y = 1744
integer width = 366
integer height = 92
integer taborder = 30
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
string text = "Preview Data"
end type

event clicked;String 	ls_SQL1

ls_SQL1 = Trim( mle_2.Text)

OpenWithparm(w_predata, ls_SQL1)

end event

type st_1 from statictext within w_select_table
integer x = 123
integer y = 60
integer width = 320
integer height = 68
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
long textcolor = 41943040
long backcolor = 74481808
string text = "Select Tables"
alignment alignment = center!
end type

type st_2 from statictext within w_select_table
integer x = 1184
integer y = 60
integer width = 293
integer height = 60
integer textsize = -9
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Segoe UI"
long textcolor = 41943040
long backcolor = 74481808
string text = "Select Lists"
alignment alignment = center!
end type

type dw_tables from datawindow within w_select_table
integer x = 128
integer y = 140
integer width = 992
integer height = 556
integer taborder = 10
string dataobject = "d_table_list"
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event clicked;///////////////////////////////////////////////////////////////////////////////////////////////////////
//Clicked script for dw_tables
///////////////////////////////////////////////////////////////////////////////////////////////////////

// if user clicks on no row do not continue processing
If row = 0 Then Return	

// Select the clicked row
dw_tables.SelectRow(0, False)
dw_tables.SelectRow(row, True)

// f_set_column_select is a user function to modify the select used by
// the column selection data window, based on which DBMS we're connected
// to; This function adjusts to the differences in catalog structures
// between the DBMS's

//is_Table = dw_tables.Object.data[row, 1]
is_Table = dw_tables.GetItemString(row, 1)

If f_set_column_select(dw_columns,is_table) < 0 Then
	MessageBox("Error", &
					"Unable to Set SQL Select statement For Columns list", &
					StopSign!)
	Return
End If

/*When switching the table, the drop-down box and SQL statement must be cleared*/
ddlb_1.Reset( )
ddlb_2.Reset( )
ddlb_3.Reset( )
mle_2.text =" "

dw_columns.Retrieve( )	  /* Note:  No Retrieve argument is used, 
									  since F_SET_COLUMN_SELECT inserts
									  the proper table name */

end event

type dw_columns from datawindow within w_select_table
integer x = 1175
integer y = 140
integer width = 992
integer height = 556
integer taborder = 10
string dataobject = "d_column_list"
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event clicked;//////////////////////////////////////////////////////////////////////////////////////////////////////////
//Clicked script for dw_columns
//////////////////////////////////////////////////////////////////////////////////////////////////////////
String  ls_string, ls_column, ls_row
int  index1, index2, index2_1,index3, index3_2
Long  ll_index,  ls_type
Boolean lb_select, lb_number



// If user clicks on no row do not continue processing
If row = 0 Then Return	

// As a column is selected, add it to the list in the select
//If already selected, turn off selection
If dw_columns.IsSelected(row) then
	dw_columns.SelectRow(row, False)
Else
	dw_columns.SelectRow(row, True)
	lb_select = true  //add column
End If



ls_row = dw_columns.GetItemString(row, 1)
/*Get field*/
SELECT "dbo"."syscolumns"."type"  
 INTO :ls_type
 FROM "dbo"."syscolumns",   
			"dbo"."sysobjects",   
			"dbo"."systypes"  
WHERE ( "dbo"."syscolumns"."id" = "dbo"."sysobjects"."id" ) and
		( ( "dbo"."sysobjects"."type" = 'U' ) AND  
		("dbo"."sysobjects"."name" = :is_table) AND
		("dbo"."syscolumns"."name" = :ls_row ));


CHOOSE CASE ls_type
	CASE 45, 37, 48, 52, 56, 62, 63, 38, &
			109, 59, 55, 106, 108, 122, 58
		lb_number = true
END CHOOSE


/*Category (x axis) drop-down options*/
IF lb_select THEN
	ddlb_1.Additem(ls_row)
ELSE
	ll_index = ddlb_1.FindItem(ls_row, 0)
	IF ll_index > 0 THEN
		ddlb_1.Deleteitem( ll_index)
		mle_2.text =""
	END IF
END IF
	

/*Values (y-axis) drop-down options*/
IF lb_select THEN
	IF lb_number THEN
		ddlb_2.AddItem(ls_row)
		ls_string = "Sum(" + ls_row + ")"
		ddlb_2.AddItem(ls_string)
	ELSE
		ls_string = "Count("+ ls_row +")"
		ddlb_2.Additem( ls_string )
	END IF
ELSE        //Select when there is no click (highlighted)
	IF lb_number THEN
		ll_index = ddlb_2.Finditem(ls_row, 0)
		IF ll_index > 0 THEN
			ddlb_2.Deleteitem( ll_index)
			mle_2.text =""
		END IF
		ll_index = ddlb_2.Finditem("Sum(" + ls_row + ")", 0)
		IF ll_index > 0 THEN
			ddlb_2.Deleteitem( ll_index)
			mle_2.text =""
		END IF
	ELSE
		ll_index = ddlb_2.Finditem("Count(" + ls_row + ")", 0)
		IF ll_index > 0 THEN
			ddlb_2.Deleteitem( ll_index)
			mle_2.text =""
		END IF
	END IF
END IF
		

/*Series drop-down options*/
IF lb_select THEN
	ddlb_3.Additem(ls_row)
ELSE
	ll_index = ddlb_3.FindItem(ls_row, 0)
	IF ll_index > 0 THEN
		ddlb_3.Deleteitem( ll_index)
		mle_2.text =""
	END IF
END IF

end event

